## @file
# Azure Pipeline build file for a build using Windows and Visual Studio.
#
# NOTE: This file is automatically synchronized from Mu DevOps. Update the original file there
#       instead of the file in this repo.
#
# - Mu DevOps Repo: https://github.com/microsoft/mu_devops
# - File Sync Settings: https://github.com/microsoft/mu_devops/blob/main/.sync/Files.yml
#
# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: BSD-2-Clause-Patent
##

resources:
  repositories:
    - repository: mu_devops
      type: github
      endpoint: microsoft
      name: microsoft/mu_devops
      ref: refs/tags/v2.3.0

variables:
- group: architectures-x86-64
- group: tool-chain-windows-visual-studio-latest
- group: 'UEFI Rust Tokens'

jobs:
- template: Jobs/PrGate.yml@mu_devops
  parameters:
    arch_list: $(arch_list)
    do_ci_build: true
    do_ci_setup: false
    do_non_ci_build: false
    do_non_ci_setup: true
    do_pr_eval: true
    extra_steps:
    - template: templates/git-config-auth.yml
    - task: RustInstaller@1
      inputs:
        rustVersion: ms-$(RustVersion)
        authenticationToken: $(RustInstallerToken)
      displayName: Install Microsoft Rust toolchain
    - task: Powershell@2 # In order to comply with msrustup
      inputs:
        targetType: 'inline'
        script: |
          New-Item -Path .cargo -ItemType Directory
          New-Item -Path .cargo/config.toml -ItemType File
          "
          [source]
          crates-io = { replace-with = 'ms-crates-io' }
          ms-crates-io = { registry = '$(MsCratesIO)' }

          [net]
          git-fetch-with-cli = true" | Out-File -FilePath .cargo/config.toml -Append -encoding ASCII

      displayName: Overriding default crates-io with internal ms-crates-io
    - task: Powershell@2
      inputs:
        targetType: 'inline'
        script: cargo install --force cargo-make
      displayName: Install Cargo Make
    packages: QemuQ35Pkg
    target_list: NO-TARGET
    tool_chain_tag: $(tool_chain_tag)
    vm_image: $(vm_image)
