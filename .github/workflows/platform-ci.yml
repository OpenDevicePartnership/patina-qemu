# A workflow to build the platform(s) in this repository using certain configurations.
#
##
# Copyright (c) Microsoft Corporation.
#
# SPDX-License-Identifier: BSD-2-Clause-Patent
##
name: "Platform CI"

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  # A job to produce the environment constants for this repository, so that the build job can
  # generate its matrix.
  vars:
    name: Get Repository Constants
    uses: ./.github/workflows/constants.yml

  # Builds the platform(s) in this repository as defined by the matrix.
  build:
    name: Build ${{ matrix.platform }} ${{ matrix.target }} ${{ matrix.tool-chain }}

    needs: vars

    runs-on: ${{ matrix.os }}

    # If matrix.container is not defined, then `image` will be null and no container will be used.
    container:
      image: ${{ matrix.container || null }}
      options: --security-opt seccomp=unconfined

    strategy:
      # This setting prevents the cancellation of other jobs when one job fails.
      fail-fast: false
      matrix:
        include:
          - config: 'Platforms/QemuQ35Pkg/PlatformBuild.py'
            target: 'DEBUG'
            tool-chain: ${{ needs.vars.outputs.windows-toolchain }}
            platform: 'Q35'
            os: 'windows-latest'
          - config: 'Platforms/QemuQ35Pkg/PlatformBuild.py'
            target: 'RELEASE'
            tool-chain: ${{ needs.vars.outputs.windows-toolchain }}
            platform: 'Q35'
            os: 'windows-latest'
          - config: 'Platforms/QemuQ35Pkg/PlatformBuild.py'
            target: 'DEBUG'
            tool-chain: ${{ needs.vars.outputs.linux-toolchain }}
            platform: 'Q35'
            os: 'ubuntu-latest'
            container: ${{ needs.vars.outputs.container-image }}
          - config: 'Platforms/QemuQ35Pkg/PlatformBuild.py'
            target: 'RELEASE'
            tool-chain: ${{ needs.vars.outputs.linux-toolchain }}
            platform: 'Q35'
            os: 'ubuntu-latest'
            container: ${{ needs.vars.outputs.container-image }}
          - config: 'Platforms/QemuSbsaPkg/PlatformBuild.py'
            target: 'DEBUG'
            tool-chain: ${{ needs.vars.outputs.linux-toolchain }}
            platform: 'SBSA'
            os: 'ubuntu-latest'
            container: ${{ needs.vars.outputs.container-image }}
          - config: 'Platforms/QemuSbsaPkg/PlatformBuild.py'
            target: 'RELEASE'
            tool-chain: ${{ needs.vars.outputs.linux-toolchain }}
            platform: 'SBSA'
            os: 'ubuntu-latest'
            container: ${{ needs.vars.outputs.container-image }}

    steps:
      # Checkout the repository to the runner or container
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configure git for use in the container. Specifically needed for the FFA builds
      - name: Container Configuration
        if: ${{ matrix.container != null }}
        run: |
          git config --global --add safe.directory '*'
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Set the version of Python to use when outside of a container. Otherwise just use what's
      # in the container.
      - name: Setup Python ${{ needs.vars.outputs.python-version }}
        if: ${{ matrix.container == null }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ needs.vars.outputs.python-version }}
          cache: 'pip'
          cache-dependency-path: 'pip-requirements.txt'
      
      # Install the pip dependencies needed to run stuart for the platform(s)
      - name: Install dependencies
        run: pip install -r pip-requirements.txt
      
      # Run the build-platform action, which calls stuart_setup, stuart_update, and stuart_build
      - name: Build and Run ${{ matrix.platform }} ${{ matrix.target }} ${{ matrix.tool-chain}}
        uses: ./.github/actions/build-platform
        with:
          platform-config: ${{ matrix.config }}
          platform-name: ${{ matrix.platform }}
          target: ${{ matrix.target }}
          tool-chain: ${{ matrix.tool-chain }}
          flash: 'true'
          stuart-args: 'SHUTDOWN_AFTER_RUN=TRUE QEMU_HEADLESS=TRUE BLD_*_QEMU_CORE_NUM=${{ needs.vars.outputs.qemu-core-count }}'
          publish-logs: 'true'

  # A final job to indicate that all builds are complete. This allows the github required checks to
  # be targeted at a single job, instead of all the jobs in the matrix, which may change over time.
  finalize:
    name: Finalize CI

    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Finish
        run: echo "All builds complete"
